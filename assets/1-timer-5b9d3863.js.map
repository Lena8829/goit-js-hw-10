{"version":3,"file":"1-timer-5b9d3863.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["//! Напиши скрипт таймера, який здійснює зворотний відлік до певної дати.\n//* оголоси поза межами методу let змінну, наприклад, userSelectedDate, і після валідації її в методі onClose() на минуле/майбутнє запиши обрану дату в цю let змінну.\n\n//* Якщо користувач вибрав дату в минулому, покажи window.alert() з текстом \"Please choose a date in the future\" і зроби кнопку «Start» не активною.\n//* Якщо користувач вибрав валідну дату (в майбутньому), кнопка «Start» стає активною.\n\n// Кнопка «Start» повинна бути неактивною доти, доки користувач не вибрав дату в майбутньому. Зверни увагу, що при обранні валідної дати, не запуску таймера і обранні потім невалідної дати, кнопка після розблокування має знову стати неактивною.\n// Натисканням на кнопку «Start» починається зворотний відлік часу до обраної дати з моменту натискання.\n\n// Відлік часу:\n// Натисканням на кнопку «Start» скрипт повинен обчислювати раз на секунду, скільки часу залишилось до вказаної дати, і оновлювати інтерфейс таймера, показуючи чотири цифри: дні, години, хвилини і секунди у форматі xx:xx:xx:xx.\n\n// Кількість днів може складатися з більше, ніж двох цифр.\n// Таймер повинен зупинятися, коли дійшов до кінцевої дати, тобто залишок часу дорівнює нулю 00:00:00:00.\n\n// Після запуску таймера натисканням кнопки Старт кнопка Старт і інпут стають неактивним, щоб користувач не міг обрати нову дату, поки йде відлік часу. Якщо таймер запущений, для того щоб вибрати нову дату і перезапустити його — необхідно перезавантажити сторінку.\n\n//* Форматування часу:\n//* Функція convertMs() повертає об'єкт з розрахованим часом, що залишився до кінцевої дати. Зверни увагу, що вона не форматує результат. Тобто якщо залишилося 4 хвилини або будь-якої іншої складової часу, то функція поверне 4, а не 04. В інтерфейсі таймера необхідно додавати 0, якщо в числі менше двох символів. Напиши функцію, наприклад addLeadingZero(value), яка використовує метод рядка padStart() і перед відмальовуванням інтерфейсу форматує значення.\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n//----------------------------------------------------------------------------------\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\n\nstartButton.addEventListener('click', startTimer);\n\nlet userSelectedDate;\n\n//налаштування flatppickr------------------------------------------------------------\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0]; // Отримуємо обрану дату\n    const currentDate = new Date();\n\n    if (userSelectedDate < currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n\n      startButton.disabled = true; // Вимикаємо кнопку\n    } else {\n      startButton.disabled = false; // Активуємо\n    }\n    console.log(selectedDates[0]);\n  },\n};\n\nflatpickr('#datetime-picker', options);\n//------------------------------------------------------------------------------------\n\nfunction startTimer() {}\n\n//конвертація мілісекунд--------------------------------------------------------------\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n//----------------------------------------------------------------------------------\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0'); //додаєм \"0\" вперед одинарної цифри\n}\n"],"names":["startButton","startTimer","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds"],"mappings":"ivBAAA;AA0BuB,SAAS,cAAc,kBAAkB,EAChE,MAAMA,EAAc,SAAS,cAAc,cAAc,EAEzDA,EAAY,iBAAiB,QAASC,CAAU,EAEhD,IAAIC,EAGJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAG9BF,EAFgB,IAAI,MAGtBG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EAEDL,EAAY,SAAW,IAEvBA,EAAY,SAAW,GAEzB,QAAQ,IAAII,EAAc,CAAC,CAAC,CAC7B,CACH,EAEAE,EAAU,mBAAoBH,CAAO,EAGrC,SAASF,GAAa,CAAE,CAGxB,SAASM,EAAUC,EAAI,CAOrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}